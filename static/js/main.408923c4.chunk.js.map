{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","services/phonebook-api.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContacts","a","axios","get","response","data","postContact","contact","post","id","deleteContact","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","phonebookApi","contacts","message","name","number","getContactsItems","state","items","getContactsFilter","filter","getLoadingStatus","isLoading","getError","error","getFilteredContactsItems","createSelector","toLowerCase","includes","changeFilter","createAction","INITIAL_FORM_LOCAL_STATE","ContactForm","useState","setName","setNumber","useSelector","phonebookSelectors","dispatch","useDispatch","handleChange","target","value","Error","className","s","form","action","onSubmit","e","preventDefault","find","alert","phonebookOperations","addContact","label","htmlFor","inputField","type","placeholder","pattern","title","required","onChange","button","disabled","Filter","phonebookActions","ContactItem","contactItem","contactText","onClick","ContactList","filteredContacts","list","map","App","useEffect","length","color","loading","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","itemsReducer","createReducer","fulfilled","payload","filterReducer","actions","isLoadingReducer","pending","rejected","errorReducer","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.408923c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__31fg2\",\"label\":\"ContactForm_label__2H0yd\",\"inputField\":\"ContactForm_inputField__3X2Qp\",\"button\":\"ContactForm_button__VukAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__2_uzK\",\"contactText\":\"ContactItem_contactText__Rj9BH\",\"button\":\"ContactItem_button__JighL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__3-wO-\",\"inputField\":\"Filter_inputField__3S2XR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__4iMjb\"};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://61ef03d0d593d20017dbb281.mockapi.io/api/';\n\nexport async function fetchContacts() {\n  const response = await axios.get('/contacts');\n  return response.data;\n}\n\nexport async function postContact(contact) {\n  const response = await axios.post('/contacts', contact);\n  return response.data.id;\n}\n\nexport async function deleteContact(id) {\n  await axios.delete(`/contacts/${id}`);\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as phonebookApi from 'services/phonebook-api';\n\nexport const fetchContacts = createAsyncThunk(\n  'phonebook/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await phonebookApi.fetchContacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const postContact = createAsyncThunk(\n  'phonebook/postContact',\n  async ({ name, number }, { rejectWithValue }) => {\n    try {\n      const id = await phonebookApi.postContact({ name, number });\n      return { id, name, number };\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'phonebook/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      await phonebookApi.deleteContact(id);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContactsItems = state => state.contacts.items;\n\nexport const getContactsFilter = state => state.contacts.filter;\n\nexport const getLoadingStatus = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilteredContactsItems = createSelector(\n  [getContactsItems, getContactsFilter],\n  (contacts, filter) =>\n    contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase())),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { phonebookOperations } from 'redux/phonebook';\nimport { phonebookSelectors } from 'redux/phonebook';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_FORM_LOCAL_STATE = { name: '', number: '' };\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(phonebookSelectors.getContactsItems);\n  const isLoading = useSelector(phonebookSelectors.getLoadingStatus);\n\n  const dispatch = useDispatch();\n\n  const resetForm = () => {\n    setName(INITIAL_FORM_LOCAL_STATE.name);\n    setNumber(INITIAL_FORM_LOCAL_STATE.number);\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        throw new Error('Unknown input field name');\n    }\n  };\n\n  const addContact = (name, number) => dispatch(phonebookOperations.postContact({ name, number }));\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isContactAlreadySaved = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (isContactAlreadySaved) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    addContact(name, number);\n    resetForm();\n  };\n\n  return (\n    <form className={s.form} action=\"#\" onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor=\"name\">\n        Name:\n      </label>\n      <input\n        className={s.inputField}\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChange}\n      />\n      <label className={s.label} htmlFor=\"number\">\n        Number:\n      </label>\n      <input\n        className={s.inputField}\n        id=\"number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        placeholder=\"Enter phone\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleChange}\n      />\n\n      <button className={s.button} type=\"submit\" disabled={isLoading}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { phonebookActions } from 'redux/phonebook';\nimport { phonebookSelectors } from 'redux/phonebook';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(phonebookSelectors.getContactsFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <p className={s.title}>Find contacts by name</p>\n      <input\n        className={s.inputField}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n        value={filter}\n        onChange={e => dispatch(phonebookActions.changeFilter(e.target.value))}\n      ></input>\n    </>\n  );\n};\n\nexport default Filter;\n","import { PropTypes } from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { phonebookOperations, phonebookSelectors } from 'redux/phonebook';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(phonebookSelectors.getLoadingStatus);\n\n  return (\n    <li className={s.contactItem}>\n      <span className={s.contactText}>\n        {contact.name}: {contact.number}\n      </span>\n      <button\n        className={s.button}\n        onClick={() => dispatch(phonebookOperations.deleteContact(contact.id))}\n        disabled={isLoading}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactItem;\n","import { useSelector } from 'react-redux';\nimport ContactItem from '../ContactItem';\nimport { phonebookSelectors } from 'redux/phonebook';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(phonebookSelectors.getFilteredContactsItems);\n\n  return (\n    <ul className={s.list}>\n      {filteredContacts.map(contact => {\n        return <ContactItem contact={contact} key={contact.name} />;\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { phonebookOperations, phonebookSelectors } from 'redux/phonebook';\nimport './App.css';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(phonebookOperations.fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(phonebookSelectors.getContactsItems);\n  const isLoading = useSelector(phonebookSelectors.getLoadingStatus);\n  const error = useSelector(phonebookSelectors.getError);\n\n  if (error) {\n    alert(error);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"phonebookTitle\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"contactsTitle\">Contacts</h2>\n      <Filter />\n      {contacts.length !== 0 && <ContactList />}\n      <div>\n        <ClipLoader color={'#000000'} loading={isLoading} size={50} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './phonebook-actions';\nimport { fetchContacts, postContact, deleteContact } from './phonebook-operations';\n\nconst initialItemsState = [];\nconst initialFilterState = '';\n\nconst itemsReducer = createReducer(initialItemsState, {\n  [deleteContact.fulfilled]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [postContact.fulfilled]: (state, { payload }) => [...state, payload],\n});\n\nconst filterReducer = createReducer(initialFilterState, {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoadingReducer = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [postContact.pending]: () => true,\n  [postContact.fulfilled]: () => false,\n  [postContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst errorReducer = createReducer(null, {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [fetchContacts.pending]: () => null,\n  [postContact.rejected]: (_, { payload }) => payload,\n  [postContact.pending]: () => null,\n  [deleteContact.rejected]: (_, { payload }) => payload,\n  [deleteContact.pending]: () => null,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  isLoading: isLoadingReducer,\n  error: errorReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport contactsReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\nexport const store = configureStore({\n  reducer: { contacts: contactsReducer },\n  devTools: isDevelopment,\n  middleware,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store /*persistor*/ } from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}